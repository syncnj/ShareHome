
  /*******************************************************************
  * TaskService.java
  * Generated by Backendless Corp.
  ********************************************************************/
		
package sharehome.com.androidsharehome2.backend;

import com.backendless.Backendless;
import com.backendless.async.callback.AsyncCallback;
import java.util.*;

import sharehome.com.androidsharehome2.backend.Task;

public class TaskService
{
    static final String BACKENDLESS_HOST = "https://api.backendless.com";
    static final String SERVICE_NAME = "TaskService";
    static final String SERVICE_VERSION_NAME = "1.0.0";
    static final String APP_VERSION = "v1";
    static final String APP_ID = "19E73C32-D357-313A-FF64-12612084E000";
    static final String SECRET_KEY = "19F8B6BD-34A1-655C-FF3E-9BD31F1B0C00";

    private static TaskService ourInstance = new TaskService();

    private TaskService(  )
    {
    }

    public static TaskService getInstance()
    {
        return ourInstance;
    }

    public static void initApplication()
    {
        Backendless.setUrl( TaskService.BACKENDLESS_HOST );
        // if you invoke this sample inside of android application, you should use overloaded "initApp" with "context" argument
        Backendless.initApp( TaskService.APP_ID, TaskService.SECRET_KEY, TaskService.APP_VERSION );
    }


    
    public java.lang.String createNewTask(java.lang.String taskName, java.lang.String membersIdList, java.lang.String groupId, int duration, java.util.Date startTime)
    {
        Object[] args = new Object[]{taskName, membersIdList, groupId, duration, startTime};
        return Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "createNewTask", args, java.lang.String.class );
    }
    
    public void createNewTaskAsync(java.lang.String taskName, java.lang.String membersIdList, java.lang.String groupId, int duration, java.util.Date startTime, AsyncCallback<java.lang.String> callback)
    {
        Object[] args = new Object[]{taskName, membersIdList, groupId, duration, startTime};
        Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "createNewTask", args, java.lang.String.class, callback);
    }
    
    public boolean deleteTask(java.lang.String taskId, java.lang.String groupId)
    {
        Object[] args = new Object[]{taskId, groupId};
        return Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "deleteTask", args, boolean.class );
    }
    
    public void deleteTaskAsync(java.lang.String taskId, java.lang.String groupId, AsyncCallback<Boolean> callback)
    {
        Object[] args = new Object[]{taskId, groupId};
        Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "deleteTask", args, Boolean.class, callback);
    }
    
    public sharehome.com.androidsharehome2.backend.Task getTaskById(java.lang.String taskId)
    {
        Object[] args = new Object[]{taskId};
        return Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "getTaskById", args, sharehome.com.androidsharehome2.backend.Task.class );
    }
    
    public void getTaskByIdAsync(java.lang.String taskId, AsyncCallback<sharehome.com.androidsharehome2.backend.Task> callback)
    {
        Object[] args = new Object[]{taskId};
        Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "getTaskById", args, sharehome.com.androidsharehome2.backend.Task.class, callback);
    }
    
    public void rotate(java.lang.String taskId)
    {
        Object[] args = new Object[]{taskId};
        Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "rotate", args );
    }
    
    public void rotateAsync(java.lang.String taskId, AsyncCallback<Object> callback)
    {
        Object[] args = new Object[]{taskId};
        Backendless.CustomService.invoke( SERVICE_NAME, SERVICE_VERSION_NAME, "rotate", args, Object.class, callback);
    }
    
}
